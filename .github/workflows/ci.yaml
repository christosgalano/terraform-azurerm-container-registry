name: Continuous Integration

on:
  # Update based on the way you work (github flow, git flow, continuous integration, etc.)
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  terraform_scan:
    name: Terraform Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ">= 1.8, < 2.0"

      - name: Terraform init
        run: terraform init

      - name: Terraform format check
        run: terraform fmt -check -no-color

      - name: Terraform validate
        run: terraform validate -no-color

      - name: Install tflint
        uses: terraform-linters/setup-tflint@v4

      - name: Tflint scan
        run: |
          tflint --init --config .tflint.hcl
          tflint --config "$(pwd)/.tflint.hcl" --format junit > tflint_results_junit.xml

      - name: Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-ref: .
          scan-type: fs
          trivy-config: .trivy.yaml

      - name: Checkov scan
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: .
          config_file: .checkov.yaml
          output_format: cli,junitxml
          output_file_path: console,checkov_results_junit.xml

      - name: Publish results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: success() || failure()
        with:
          check_name: Scan Results
          files: '*_junit.xml'
          action_fail: true

  terraform_test:
    name: Terraform Test
    needs: terraform_scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ">= 1.8, < 2.0"

      - name: Terraform init
        run: terraform init

      - name: Contract tests
        run: terraform test -filter=tests/contract.tftest.hcl

      - name: Integration tests
        if: github.ref_type == 'tag'
        run : terraform test -filter=tests/integration.tftest.hcl
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

  terraform_docs:
    name: Terraform Docs
    needs: terraform_test
    if: github.ref_type == 'branch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Run terraform-docs
        uses: terraform-docs/gh-actions@v1.1.0
        with:
          working-dir: .
          output-method: ""
          config-file: .terraform-docs.yaml
          git-push: "true"
